;;Basic Operations
;ruby declare x, y; x = 1; y = 9; puts (x+(y+1)); end --> 11
;ruby declare x, y, z; x = 1; y = 9; z = 4; puts (z+(x*(y+1))); end --> 14
;ruby declare x, y, z; x = 1; y = 9; z = 4; puts ((z+(x*(y+1)))/2); end --> 7
;ruby declare x, y, z, w; x = 1; y = 9; z = 4; w = ((z+(x*(y+1)))/2); puts w; end --> 7
;ruby puts("hola"+"mundo"); end --> "holamundo"
;ruby puts("hola"*4); end --> "holaholaholahola"
;ruby puts("hola"*1); end --> "hola"
;ruby puts("hola"*0); end --> ""

;;For examples
;;ruby for x in (1..10) do puts x; end end
;;ruby for x in (1...10) do puts x; end end

;;For con step
;;ruby for x in ((1..9) step 2) do puts x; end end

;;While examples
;;ruby declare x; x = 0; while(x < 10) do puts x; x = (x+1); end end
;;ruby declare x; x = 0; while(x < 10) do x = (x+1); puts x; end end
;;ruby declare x; x = 0; while(x < 10) do x +=1 ; puts x; end end

;;Until Examples
;;ruby declare x; x = 0; until (x >= 10) do puts x; x = (x+1); end end

;;If examples
;;ruby if (1 == 1) then puts 1; else puts 0; end end
;;ruby declare n; n = 2; if (n == 1) then puts "A"; elsif (n == 2) puts "B"; else puts 0; end end
;;ruby if (2 == 1) then puts "A"; elsif (2 == 2) puts "B"; else puts 0; end end
;;ruby if (2 == 1) then puts "A"; elsif (2 == 6) puts "B"; elsif (3 == 3) puts "C"; else puts 0; end end
;;ruby declare n; n = 3; if (n == 1) then puts "A"; elsif (n == 2) puts "B"; elsif (n == 3) puts "C"; elsif (n == 4) puts "D"; else puts 0; end end
;;ruby declare n, x; n = 6; if (n > 7) then x = 1; puts x; else n = 9; puts n; end end
;;ruby declare x; x = 3; if (x > 5) then puts x; elsif (x < 3) then puts "mundo"; else puts "hola"; else puts "otro else"; end end 
;;ruby if(true && false) then puts true; else puts false; end end
;;ruby if(true || false) then puts true; else puts false; end end

;;Unless Examples
;;ruby unless false then puts 4; end end
;;ruby unless true then puts 4; else puts "hola mundo"; end end
;;ruby unless true then puts 4; else puts "hola mundo"; else puts "otro else"; end end

;;assigns-and examples
;;ruby def add1(val) val+=1; return val; end add1(100); end
;;ruby declare x; x = 10; x += 2; puts x; end
;;ruby declare x; x = 10; x -= 2; puts x; end
;;ruby declare x; x = 10; x /= 2; puts x; end
;;ruby declare x; x = 10; x **= 2; puts x; end

;;Procedures examples
;;ruby def print(val) puts val; end print("hola mundo"); end
;;ruby def add1(val) val += 1 ; return val; end add1(100); end
;;ruby def fact(n) if (n == 0) then return 1; else puts "el valor de n es: ", n; return (n*(fact((n - 1)))); end end puts "el factorial de 5 es: ",(fact(5)); end
;;ruby def to_text(num) declare text; text = ["cero", "uno", "dos", "tres"]; return (text[num]); end to_text(3); end
;; ruby def mundo() return("mundo"); end puts("hola"+(mundo())); end
;;ruby def mundo() return(1); end puts(2+(mundo())); end
;;ruby def mundo() return(true); end puts(true and (mundo())); end
;;ruby def fibo(n) if (n <= 2) then return 1; else declare left, right; left = (n - 1); right = (n - 2); return ((fibo(left))+(fibo(right))); end end puts(fibo(10)); end
;;ruby def f() declare text; text = ["cero", "uno", "dos", "tres"]; return (text); end f()[0]; end

;;Array examples
;;ruby declare a; a = [1, 2, 3, 4, 5]; a[3]; end --> 4
;;ruby declare a; a = [1, 2, 3, 4, 5]; a[0,2]; end --> (1 2)
;;ruby declare x; x = [[1,2,3],4,5,6]; x[0]; end --> (1 2 3)
;;ruby declare x; x = [[1,2,3],4,5,6]; x[0][0]; end --> 1
;;ruby declare x; x = [[1,2,3],4,5,6]; x[2]; end --> 5
;;ruby declare x; x = [[1,2,3],4,5,6]; x[0][2]; end --> 3
;;ruby declare x; x = [[1,2,3],4,5,6,[7,8,9]]; x[4]; end --> (7 8 9)
;;ruby declare x; x = [[1,2,[3,4]],5,6]; x[0][2][0]; end --> 3

;;Multiple elements example
;;ruby declare a, b; b = [0, 10, 100]; a = [1, 2, 3, 4, 5]; for x in (0..4) do puts(a[x]); end puts b; end
;;ruby def f(n,m) declare z; n+=10; z = n; m*=(z+2); return m; end if((f(1,2)) > 4) then puts "hola"; else "mundo"; end end
